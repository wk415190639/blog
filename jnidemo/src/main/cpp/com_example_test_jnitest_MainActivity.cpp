/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <android/log.h>
/* Header for class com_example_test_jnitest_MainActivity */

#ifndef _Included_com_example_test_jnitest_MainActivity
#define _Included_com_example_test_jnitest_MainActivity
#ifdef __cplusplus
extern "C" {
#endif

#define LOG(...)  __android_log_print(ANDROID_LOG_INFO,"jnitest",__VA_ARGS__ )
#include <stdlib.h>

/*
 * Class:     com_example_test_jnitest_MainActivity
 * Method:    stringArray
 * Signature: ([Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_example_test_jnitest_MainActivity_stringArray
        (JNIEnv *env, jobject object, jobjectArray stringArray) {

    int count = env->GetArrayLength(stringArray);

    for (int i = 0; i < count-1; i++) {
        jobject item = env->GetObjectArrayElement(stringArray, i);

        const char *str = env->GetStringUTFChars((jstring) item, 0);

        char * a = (char *)malloc(sizeof(char *));

        *a = 0x43;
        LOG("index:%d string:%s", i,a);

        env->ReleaseStringUTFChars((jstring) item, str);

    }

}

/*
 * Class:     com_example_test_jnitest_MainActivity
 * Method:    floatArray
 * Signature: ([F)V
 */
JNIEXPORT void JNICALL Java_com_example_test_jnitest_MainActivity_floatArray
  (JNIEnv *env, jobject, jfloatArray floatArray){

   jfloat * array = env->GetFloatArrayElements(floatArray,0);

    int count = env->GetArrayLength(floatArray);

    for(int i=0;i<count;i++){

        LOG("index:%d float:%f", i, array[i]);
    }

    env->ReleaseFloatArrayElements(floatArray,array,0);
}

/*
 * Class:     com_example_test_jnitest_MainActivity
 * Method:    boolArray
 * Signature: ([Z)V
 */
JNIEXPORT void JNICALL Java_com_example_test_jnitest_MainActivity_boolArray
  (JNIEnv *, jobject, jbooleanArray){

}


/*
 * Class:     com_example_test_jnitest_MainActivity
 * Method:    callBack
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_example_test_jnitest_MainActivity_callBack
        (JNIEnv *env, jobject,jobject mainActivity){

    jclass  mainClass = env->GetObjectClass(mainActivity);


    if(mainClass == nullptr)
        return ;
    jmethodID  jmethodID1 = env->GetMethodID(mainClass,"onCallBack","(I)V");

    if(jmethodID1 == nullptr)
        return;

    env->CallVoidMethod(mainActivity,jmethodID1,101);

    env->DeleteLocalRef(mainClass);


}

#ifdef __cplusplus
}
#endif
#endif
